@using UI.Builders.Shared.Enums

@model UI.Modules.Header.UiHeader

@{
    var baseHeaderClassName = "w-header";
    var headerSizeClass = $"w-header-size {Model.Size.ToString().ToLower()}";
    var headerAlignmentClass = $"w-header-alignment {Model.TextAlignment.ToString().ToLower()}";
}

@{
    switch (Model.Type)
    {
        case UiHeaderTypeEnum.Colored:
            {
                var headerClassName = $"w-header-colored {Model.Color.ToString().ToLower()} {headerSizeClass} {headerAlignmentClass} {baseHeaderClassName}";
                <div>
                    <div class="@headerClassName">
                        <div class="ui container">
                            @if (Model.IsMainHeader)
                            {
                                <h1 class="w-header-title">
                                    @(Model.Title)
                                </h1>
                            }
                            else
                            {
                                <div class="w-header-title">
                                    @(Model.Title)
                                </div>
                            }
                          
                            @if (!string.IsNullOrEmpty(Model.SubText))
                            {
                                <span class="w-header-subtext">
                                    @Model.SubText
                                </span>
                            }
                            @if (Model.Buttons.Any())
                            {
                                <div class="w-header-buttons">
                                    @foreach (var button in Model.Buttons)
                                    {
                                        <div class="w-header-button">
                                            <a href="@button.ButtonUrl">
                                                <div class="ui button @button.Type.ToString().ToLower()">
                                                    @button.Text
                                                </div>
                                            </a>
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                </div>
                break;
            }
        case UiHeaderTypeEnum.BackgroundImage:
            {
                <div id="_UIHeaderWrapper">
                    <div class="w-header-background-image @(headerSizeClass) @(headerAlignmentClass) @(baseHeaderClassName)" style="background-image: url(@Model.ImagePath)">
                        <div class="ui container">
                            @if (!string.IsNullOrEmpty(Model.Title))
                            {
                                <h1>
                                    @Model.Title
                                </h1>
                            }
                            @if (!string.IsNullOrEmpty(Model.SubText))
                            {
                                <span class="w-header-subtext">
                                    @Model.SubText
                                </span>
                            }
                            @if (Model.ShowScrollButton)
                            {
                                //Include script only when scroll button is used
                                @Helpers.ScriptHelper.RequireScript("/scripts/views/modules/uiHeader")
                                <span class="w-header-button _UIHeaderMove">
                                    <i class="angle down icon huge"></i>
                                </span>
                            }
                        </div>
                    </div>
                </div>
                break;
            }
    }
}



