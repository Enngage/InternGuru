@model UI.Modules.InfoMessage.Views.InfoMessageView
@using UI.Extensions;
@using UI.Modules.InfoMessage.Enums
@{
    var messageClass = string.Empty;
    switch (Model.MessageType)
    {
        case InfoMessageTypeEnum.Error:
        {
            messageClass = "negative";
            break;
        }
        case InfoMessageTypeEnum.Warning:
        {
            messageClass = "warning";
            break;
        }
        case InfoMessageTypeEnum.Info:
        default:
        {
            messageClass = "info";
            break;
        }
    }

    // show message only if the cookie is not set at all, if cookie exists (with any value) it means that user closed message
    var showMessage = Request.Cookies[Model.CookieName] == null;
}

@if (showMessage)
{
    @Html.RequireScript("/scripts/views/infoMessage/base")

    <div id="@Model.MessageID" class="ui message _InfoMessageClosable @messageClass" data-messageid="@Model.MessageID" data-closedfordayscount="@Model.ClosedForDaysCount" data-rememberclosed="@Model.RememberClosed">
        @if (Model.IsClosable)
        {
            <i class="close icon"></i>
        }
        @if (string.IsNullOrEmpty(Model.Title))
        {
            <div class="header">
                @Model.Title
            </div>
        }
        <p>@Html.Raw(Model.Message)</p>
    </div>
}





