@model UI.Modules.GoogleMaps.Views.GoogleMapView
@{
    var apiKey = Core.Config.AppConfig.GoogleApiKey;
}

@helper MapScript(string apiKey)
{
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=@apiKey&callback=initMap"></script>
    <script type="text/javascript">
        function initMap() {
            var lat = parseFloat(@(Math.Round(Model.Lat, 5)));
            var lng = parseFloat(@(Math.Round(Model.Lng, 5)));
            var zoom = parseInt(@Model.Zoom);

            var uluru = { lat: lat, lng: lng};
            var map = new google.maps.Map(document.getElementById('_GoogleMap'), {
                zoom: zoom,
                center: uluru,
                scrollwheel: false
            });
            var marker = new google.maps.Marker({
                position: uluru,
                map: map,
                title: '@Model.MarkerTitle'
            });
        }
        @*function initMap() {
        // get element where map will be inserted
        var mapDiv = document.getElementById('_GoogleMap');

        // create location based on lat and lng
        var latLng = new google.maps.LatLng(@Model.Lat, @Model.Lng);

        // prepare map
        var map = new google.maps.Map(mapDiv, {
            center: latLng,
            zoom: @Model.Zoom,
            scrollwheel: false
        });

        // prepare marker
        var marker = new google.maps.Marker({
            position: latLng,
            title: '@Model.MarkerTitle',
        });

        // add marker
        marker.setMap(map);
    }*@
    </script>
}

@Helpers.ScriptHelper.RequireScriptContent(MapScript(apiKey).ToString())

<div id="_GoogleMap" class="w-googlemaps-wrapper"></div>





