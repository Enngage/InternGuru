@model UI.Builders.Internship.Views.InternshipBrowseView
@using UI.Helpers;
@using Core.Helpers;
@using UI.Extensions;
@using PagedList.Mvc;
@{
    ViewBag.Title = "Nabídka stáží";
    ViewBag.Description = "Najdi si stáž z uvedené nabídky a pracuj pro svou oblíbenou IT nebo technologickou firmu. Nauč se nové technologie nebo se zdokonal v tom, co znáš a poznej jak to chodí v praxi.";
    Layout = "~/Views/Shared/Body/DarkPadded.cshtml";

    var currentCategory = ViewContext.RouteData.Values["category"] != null ? ViewContext.RouteData.Values["category"].ToString() : string.Empty;
    var searchVal = HttpContext.Current.Request.QueryString["search"] ?? string.Empty;
    var cityVal = HttpContext.Current.Request.QueryString["city"] ?? string.Empty;

    var totalInternshipCount = Model.InternshipCategories.Sum(m => m.InternshipCount);

    //header
    Model.Master.UIHeader.SetHeader(UI.Builders.Shared.UIHeaderType.green, ViewBag.Title);
}

@Html.RequireScript("/scripts/views/internship/browseInternships")

@using (Html.BeginForm("Index", "Internships", FormMethod.Get, null))
{
    <div class="ui grid">
        <div class="sixteen wide column">
            <div class="ui segment padded">
                <div class="ui grid">
                    <div class="eight wide mobile seven wide tablet seven wide computer column">
                        <div class="ui search _InternshipTitleAutocomplete">
                            <div class="ui fluid icon input">
                                <input class="prompt" name="search" placeholder="Klíčové slovo ..." type="text" value="@searchVal" autocomplete="off">
                                <i class="search icon"></i>
                            </div>
                            <div class="results"></div>
                        </div>
                    </div>
                    <div class="eight wide mobile seven wide tablet seven wide computer column">
                        <div class="ui search _CitiesAutocomplete">
                            <div class="ui fluid icon input">
                                <input class="prompt" name="city" placeholder="Město" type="text" value="@cityVal" autocomplete="off">
                                <i class="world icon"></i>
                            </div>
                            <div class="results"></div>
                        </div>
                    </div>
                    <div class="sixteen wide mobile two wide tablet two wide computer column">
                        <button class="ui button submit primary fluid" type="submit">
                            Hledat
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div class="five wide tablet only four wide computer only column">
            <div class="ui padded segment">
                <div class="ui secondary vertical pointing menu w-internship-category-menu ">
                    @if (string.IsNullOrEmpty(currentCategory))
                    {
                        <a href="@Url.Action("Index", new { category = "" })" class="active item">
                            Všechny nabídky
                            <span class="w-body-float-right">@totalInternshipCount</span>
                        </a>
                    }
                    else
                    {
                        <a href="@Url.Action("Index", new { category = "" })" class="item">
                            Všechny nabídky
                            <span class="w-body-float-right">@totalInternshipCount</span>
                        </a>
                    }

                    @foreach (var category in Model.InternshipCategories)
                    {
                    if (currentCategory.Equals(category.CodeName, StringComparison.OrdinalIgnoreCase))
                    {
                            <a href="@Url.Action("Index", new { category = category.CodeName })" class="active item">
                                @category.CategoryName
                                <span class="w-font-bold w-body-float-right">@category.InternshipCount</span>
                            </a>
                        }
                        else
                        {
                            <a href="@Url.Action("Index", new { category = category.CodeName })" class="item">
                                @category.CategoryName
                                <span class="w-body-float-right">@category.InternshipCount</span>
                            </a>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="sixteen wide mobile eleven wide tablet twelve wide computer column">
            <div class="ui padded segment">

                @if (Model.Internships.Count() == 0)
                {
                    @Html.RenderWarningMessage("Žádné stáže nebyly nalezeny")
                }

                <table class="ui very basic table w-table-listing _InternshipsListingTable">
                    <tbody>
                        @foreach (var internship in Model.Internships)
                        {
                            <tr data-link="@Url.Action("Index", "Internship", new { id = internship.ID, codename = internship.CodeName })">
                                <td class="collapsing">
                                    <img class="ui tiny image" alt="@internship.Title" src="@ImageHelper.GetTransparentImage()" data-src="@ImageHelper.GetCompanyLogo(internship.CompanyID)" />
                                </td>
                                <td>
                                    <a href="@Url.Action("Index", "Internship", new { id = internship.ID, codename = internship.CodeName })">
                                        @internship.Title
                                    </a>
                                    <span class="w-font-size-small w-font-light">(@CurrencyHelper.DisplayCurrencyValue(internship.Amount, internship.CurrencyName, internship.CurrencyShowSignOnLeft) / @internship.AmountTypeName)</span>
                                </td>
                                <td>
                                    @Html.Raw(CountryHelper.GetCountryIcon(internship.CountryCode)) @internship.City
                                </td>
                                <td class="collapsing w-body-text-right w-mobile-left">
                                    @InternshipHelper.GetInternshipDurationDisplayValue(internship.MinDurationType, internship.MinDurationDefaultValue, internship.MaxDurationType, internship.MaxDurationDefaultValue)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

                <div class="w-margin-top-10">
                    @if (Model.Internships.PageCount > 1)
                    {
                        @Html.PagedListPager(Model.Internships, page => Url.Action("Index", "Internships", new { page }), new PagedListRenderOptions() { MaximumPageNumbersToDisplay = 6 })
                    }
                </div>
            </div>
        </div>
    </div>
}





