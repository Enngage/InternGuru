@model UI.Builders.Internship.Views.InternshipBrowseView
@using Core.Helpers
@using UI.Builders.Shared.Enums
@{
    Model.Metadata.BasicMetadata.Title = "Nabídka stáží";
    Model.Metadata.BasicMetadata.Description = "Najdi si stáž z uvedené nabídky a pracuj pro svou oblíbenou IT nebo technologickou firmu. Nauč se nové technologie nebo se zdokonal v tom, co znáš a poznej jak to chodí v praxi.";
    Model.Master.UiHeader.UseColoredHeader(UIHeaderSizeEnum.Inherit, UIHeaderColorEnum.Green, Model.Metadata.BasicMetadata.Title);

    Layout = "~/Views/Shared/Body/DarkPadded.cshtml";

    var currentCategory = Helpers.UrlHelper.GetRouteParam("category", string.Empty) ?? string.Empty;

    var searchVal = Helpers.UrlHelper.GetQueryString("search", string.Empty);
    var cityVal = Helpers.UrlHelper.GetQueryString("city", string.Empty);
    var paidOnly = Helpers.InputHelper.GetCheckboxValue(Helpers.UrlHelper.GetQueryString("paidonly", string.Empty), false);

    var totalInternshipCount = Model.InternshipCategories.Sum(m => m.InternshipCount);
}
@Helpers.ScriptHelper.RequireScript("/scripts/views/internship/browseInternships")
@using (Html.BeginForm("Search", "Internships", FormMethod.Get, null))
{
    <div class="ui grid">
        <div class="sixteen wide column">
            <div class="ui segment padded">
                <div class="ui grid">
                    <div class="sixteen wide column">
                        @if (paidOnly)
                        {
                            <div class="ui checked checkbox">
                                <input name="paidonly" type="checkbox" checked="">
                                <label>Pouze placené stáže</label>
                            </div>
                        }
                        else
                        {
                            <div class="ui checkbox">
                                <input name="paidonly" type="checkbox">
                                <label>Pouze placené stáže</label>
                            </div>
                        }
                    </div>
                    <div class="sixteen wide mobile six wide tablet seven wide computer column">
                        <div class="ui search _InternshipTitleAutocomplete">
                            <div class="ui fluid icon input">
                                <input class="prompt" name="search" placeholder="Klíčové slovo ..." type="text" value="@searchVal" autocomplete="off">
                                <i class="search icon"></i>
                            </div>
                            <div class="results"></div>
                        </div>
                    </div>
                    <div class="sixteen wide mobile six wide tablet seven wide computer column">
                        <div class="ui search _CitiesAutocomplete">
                            <div class="ui fluid icon input">
                                <input class="prompt" name="city" placeholder="Město" type="text" value="@cityVal" autocomplete="off">
                                <i class="world icon"></i>
                            </div>
                            <div class="results"></div>
                        </div>
                    </div>
                    <div class="sixteen wide mobile four wide tablet two wide computer column">
                        <button class="ui button primary fluid" type="submit">
                            Hledat
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <div class="seven wide tablet only four wide computer only column">
            <div class="ui padded segment">
                <div class="ui secondary vertical pointing menu w-internship-category-menu ">
                    @if (string.IsNullOrEmpty(currentCategory))
                    {
                        <a href="@Url.Action("Index", new { category = "", page = "", paidonly = paidOnly ? Helpers.InputHelper.ValueOfEnabledCheckbox : ""})" class="active item">
                            Všechny nabídky
                            <span class="w-body-float-right">@totalInternshipCount</span>
                        </a>
                    }
                    else
                    {
                        <a href="@Url.Action("Index", new { category = "", page = "" })" class="item">
                            Všechny nabídky
                            <span class="w-body-float-right">@totalInternshipCount</span>
                        </a>
                    }
                    @foreach (var category in Model.InternshipCategories)
                    {
                        var routeObj = paidOnly ? new { category = category.CodeName, paidonly = Helpers.InputHelper.ValueOfEnabledCheckbox } : new { category = category.CodeName, paidonly = string.Empty };

                        if (currentCategory.Equals(category.CodeName, StringComparison.OrdinalIgnoreCase))
                        {

                            <a href="@Url.Action("Index", routeObj)" class="active item">
                                @category.CategoryName
                                <span class="w-font-bold w-body-float-right">@category.InternshipCount</span>
                            </a>
                        }
                        else
                        {
                            <a href="@Url.Action("Index", routeObj)" class="item">
                                @category.CategoryName
                                <span class="w-body-float-right">@category.InternshipCount</span>
                            </a>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="sixteen wide mobile nine wide tablet twelve wide computer column">
            <div class="ui padded segment">
                @if (!Model.Internships.Any())
                {
                    @Helpers.MessageHelper.RenderWarningMessage("Žádné stáže nebyly nalezeny")
                }
                else
                {
                    <div class="ui divided items w-item-primary-type">
                        @foreach (var internship in Model.Internships)
                        {
                            <div class="item">
                                <a class="ui tiny image" href="@Url.Action("Index", "Company", new { codeName = internship.CompanyCodeName })">
                                    <img alt="@internship.CompanyName logo" src="@Helpers.ImageHelper.GetCompanyLogo(internship.CompanyGuid)">
                                </a>
                                <div class="content">
                                    <a href="@Url.Action("Index", "Internship", new {id = internship.ID, codename = internship.CodeName})" class="header">@internship.Title</a>
                                    <div class="meta">
                                        <span>
                                            Nástup od:
                                            <strong>@DateHelper.FormatDate(internship.StartDate)</strong>
                                        </span>
                                        <span class="w-tablet-hide w-mobile-hide">|</span>
                                        <span class="w-tablet-block w-mobile-block">
                                            Délka trvání:
                                            <strong>
                                                @InternshipHelper.GetInternshipDurationDisplayValue(internship.MinDurationType, internship.MinDurationDefaultValue, internship.MaxDurationType, internship.MaxDurationDefaultValue)
                                            </strong>
                                        </span>
                                        <span class="w-tablet-hide w-mobile-hide">|</span>
                                        <span class="w-tablet-block w-mobile-block">
                                            Místo:
                                            <strong>
                                                @internship.City @Helpers.CountryHelper.GetCountryIcon(internship.CountryCode)
                                            </strong>
                                        </span>
                                    </div>
                                    <div class="description">
                                        <p>
                                           @internship.ShortDescription
                                        </p>
                                    </div>
                                    <div class="extra">
                                        @if (internship.IsPaid)
                                        {
                                            <div class="ui label"><i class="money icon"></i>@(Helpers.TextHelper.GetInternshipAmount(internship.HideAmount, internship.Amount, internship.CurrencyName, internship.CurrencyShowSignOnLeft)) / @internship.AmountTypeName</div>
                                        }
                                        @if (internship.RequiredLanguages.Any())
                                        {
                                            <div class="ui label">
                                                <i class="globe icon"></i>@string.Join(",", internship.RequiredLanguages)
                                            </div>
                                        }
                                        <a class="ui right floated primary button" href="@Url.Action("Index", "Company", new { codeName = internship.CompanyCodeName })">
                                            Detail
                                            <i class="right chevron icon"></i>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    @*<table class="ui very basic tablet stackable table w-table-listing _InternshipsListingTable">
                            <thead class="w-tablet-hide w-mobile-hide">
                            <tr>
                                <th colspan="2">
                                    Pozice
                                </th>

                                <th class="collapsing center aligned w-tablet-show w-mobile-show">
                                    Odměna
                                </th>
                                <th class="collapsing center aligned">
                                    Délka stáže
                                </th>
                                <th class="right aligned">
                                    Město
                                </th>
                            </tr>
                            </thead>
                            <tbody>
                            @foreach (var internship in Model.Internships)
                            {
                                <tr data-link="@Url.Action("Index", "Internship", new {id = internship.ID, codename = internship.CodeName})">
                                    <td class="collapsing">
                                        <img class="ui mini image" alt="@internship.Title" src="@Helpers.ImageHelper.GetTransparentImage()" data-src="@Helpers.ImageHelper.GetCompanyLogo(internship.CompanyGuid)"/>
                                    </td>
                                    <td>
                                        <a href="@Url.Action("Index", "Internship", new {id = internship.ID, codename = internship.CodeName})">
                                            @internship.Title
                                        </a>
                                    </td>

                                    <td class="w-tablet-show w-mobile-show">
                                        @if (internship.Amount > 0)
                                        {
                                            <span>@(Helpers.TextHelper.GetInternshipAmount(internship.HideAmount, internship.Amount, internship.CurrencyName, internship.CurrencyShowSignOnLeft)) / @internship.AmountTypeName</span>
                                        }
                                        else
                                        {
                                            <span>-</span>
                                        }
                                    </td>
                                    <td class="collapsing center aligned w-mobile-left">
                                        @InternshipHelper.GetInternshipDurationDisplayValue(internship.MinDurationType, internship.MinDurationDefaultValue, internship.MaxDurationType, internship.MaxDurationDefaultValue)
                                    </td>
                                    <td class="collapsing right aligned w-mobile-left">
                                       @internship.City &nbsp;@Helpers.CountryHelper.GetCountryIcon(internship.CountryCode)
                                    </td>
                                </tr>
                            }
                            </tbody>
                        </table>*@
                if (Model.Internships.PageCount > 1)
                {
                    <div class="w-margin-top-10">
                        @Helpers.PagerHelper.GetPager(Model.Internships, page => Url.Action(Helpers.UrlHelper.CurrentAction, Helpers.UrlHelper.CurrentController, new { page, search = searchVal, city = cityVal, paidonly = paidOnly ? Helpers.InputHelper.ValueOfEnabledCheckbox : string.Empty }))
                    </div>
                    }
                }
            </div>
        </div>
    </div>
}


