@using UI.Helpers;
@using UI.Extensions;
@using PagedList.Mvc
@using Core.Helpers;
@model UI.Builders.Auth.Views.AuthConversationView

@{
    ViewBag.Title = "Konverzace | " + Model.ConversationUser.DisplayName;
    Layout = "~/Views/Auth/AuthMaster.cshtml";
    // tabs
    Model.Tabs.RecentConversations.Set(true, 4);
}

<div class="ui grid">
    <div class="sixteen wide mobile sixteen wide tablet sixteen wide computer column">
        @using (Html.BeginForm("Conversation", "Auth", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            @Html.Hidden("RecipientApplicationUserId", Model.ConversationUser.UserID)
            @Html.Hidden("CompanyID", Model.LastMessage?.CompanyID ?? 0)

            <h1 class="ui header">
                <img alt="" data-src="@Helpers.ImageHelper.GetUserAvatar(Model.ConversationUser.UserID)" src="@Helpers.ImageHelper.GetTransparentImage()" class="ui image tiny">
                @($"{Model.ConversationUser.DisplayName}")
            </h1>

            @Html.RenderFormValidationResult(Model.MessageForm.FormResult.IsSuccess, "Odesláno")

            <div class="ui reply form">
                <div class="field">
                    <textarea name="Message">@Model.MessageForm.Message</textarea>
                </div>

                <button class="ui blue labeled icon button">
                    <i class="icon edit"></i> Odeslat
                </button>
            </div>
        }

        <div class="ui divided items">
            @foreach (var message in Model.Messages)
            {
                var segmentClass = message.WrittenByCurrentUser ? "" : "w-segment-dark basic";
                <div class="ui segment padded @segmentClass">
                    <div class="item">
                        <div class="content">
                            <div class="extra w-body-text-right w-font-size-small">
                                @if (!string.IsNullOrEmpty(message.Subject))
                                {
                                    <span>
                                        @message.Subject |&nbsp;
                                    </span>
                                }
                                <i class="calendar icon"></i>@DateHelper.FormatTime(message.MessageCreated)
                                @if (message.SenderApllicationUserId.Equals(message.CurrentUserId, StringComparison.OrdinalIgnoreCase))
                                {
                                    <span>|</span>
                                    if (message.IsRead)
                                    {
                                        <i title="Přečteno" class="checkmark green icon"></i>
                                    }
                                    else
                                    {
                                        <i title="Nepřečteno" class="remove red icon"></i>
                                    }
                                }
                            </div>
                            <div class="description">
                                <p>
                                    @Html.Raw(Helpers.HtmlHelper.AddLineBreaks(message.MessageText))
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="w-margin-top-10">
            @Helpers.PagerHelper.GetPager(Model.Messages)
        </div>

    </div>
</div>