@using UI.Helpers;
@using UI.Extensions;
@using PagedList.Mvc
@model UI.Builders.Auth.Views.AuthConversationView

@{
    ViewBag.Title = "Konverzace | " + Model.ConversationUser.DisplayName;
    Layout = "~/Views/Shared/Body/DarkPadded.cshtml";
}

<div class="ui grid">
    <div class="centered sixteen wide mobile sixteen wide tablet eight wide computer column">
        @using (Html.BeginForm("Conversation", "Auth", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            @Html.Hidden("RecipientApplicationUserId", Model.ConversationUser.UserID)
            @Html.Hidden("CompanyID", Model.LastMessage != null ? Model.LastMessage.CompanyID : 0)

            @Html.RenderFormValidationResult(Model.MessageForm.FormResult.IsSuccess)

            <h1>
                @($"Konverzace s {Model.ConversationUser.DisplayName}")
            </h1>

            <div class="ui reply form">
                <div class="field">
                    <textarea name="Message">@Model.MessageForm.Message</textarea>
                </div>

                <button class="ui blue labeled submit icon button">
                    <i class="icon edit"></i> Odeslat
                </button>
            </div>
        }

        <div class="ui divided items">

            @foreach (var message in Model.Messages)
            {
                var segmentClass = message.WrittenByCurrentUser ? "" : "w-segment-dark basic";
                var senderName = (!string.IsNullOrEmpty(message.SenderFirstName) ? message.SenderFirstName + " " + message.SenderLastName : message.SenderApplicationUserName);
                <div class="ui segment padded @segmentClass">
                    <div class="item w-body-item-highlighted">
                        <div class="content">
                            <div class="extra w-body-text-right w-font-size-small">
                                <i class="calendar icon"></i>@message.MessageCreated.ToShortDateString() @message.MessageCreated.ToLongTimeString() |
                                @if (message.IsRead)
                                {
                                    <i title="Přečteno" class="checkmark green icon"></i>
                                }
                                else
                                {
                                    <i title="Nepřečteno" class="remove red icon"></i>
                                }
                            </div>
                            <div class="description">
                                <p>
                                    @HTMLAddons.AddLineBreaks(message.MessageText)
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        @if (Model.Messages.PageCount > 1)
            {
            @(Model.Messages.PageCount < Model.Messages.PageNumber ? 0 : Model.Messages.PageNumber) @:/ @Model.Messages.PageCount
            @Html.PagedListPager(Model.Messages, page => Url.Action("Conversation", "Auth", new { page }), new PagedListRenderOptions() { MaximumPageNumbersToDisplay = 6 })
        }

    </div>
</div>